variables:
  # Change
  APP_TAG: "latest"
  # DO NOT CHANGE
  IMG_APP: harbor.devbridge.net/sourcery-academy/$TEAM_NAME/frontend

stages:
  - clone
  - build
  - deploy
  - status

clone:
  stage: clone
  image: alpine:latest
  before_script:
    - apk add --no-cache --update curl jq git
  script:
    - . ./build-status.gitlab-ci.sh
    - $GIT_CLONE_AUTH_FE ./git-clone
    - cd git-clone
    - git checkout $SOURCE_BRANCH_NAME
    - MASTER_HASH=$(git show-ref | grep refs/remotes/origin/main | awk '{print $1}')
    - status INPROGRESS
    - deploy
    - echo "MASTER_HASH=$(git show-ref | grep refs/remotes/origin/main | awk '{print $1}')" >> ../clone.env
  artifacts:
    reports:
      dotenv: clone.env
    paths:
      - clone.env
      - git-clone/*

build:
  stage: build
  image: harbor.devbridge.net/sourcery-academy/gitlab-packages:latest
  script:
    - /kaniko/executor
      --context "git-clone"
      --dockerfile "git-clone/Dockerfile"
      --destination "harbor.devbridge.net/sourcery-academy/$TEAM_NAME/frontend:$APP_TAG"
  dependencies:
    - clone

deploy:
  stage: deploy
  image: harbor.devbridge.net/sourcery-academy/gitlab-packages:latest
  script:
    - if [[ "$DEPLOY" == "true" ]]; then
        cd git-clone/helm;
        helm upgrade
        --install frontend frontend
        --namespace $TEAM_NAME
        --create-namespace
        --values frontend/values.yaml
        --set ingress.hosts[0].host="$HOST"
        --set image.repository=$IMG_APP
        --set image.tag=$APP_TAG;
        kubectl get secret regcred -n gitlab -o json | jq 'del(.metadata["namespace","creationTimestamp","resourceVersion","selfLink","uid"])' | kubectl apply -n $TEAM_NAME -f -;
        kubectl rollout restart -n $TEAM_NAME deployment frontend-helm;
      fi
  dependencies:
    - clone

status_ok:
  stage: status
  image: alpine:latest
  before_script:
    - apk add --no-cache --update curl jq
  script:
    - . ./build-status.gitlab-ci.sh
    - status SUCCESSFUL
  dependencies:
    - clone
  when: on_success

status_failed:
  stage: status
  image: alpine:latest
  before_script:
    - apk add --no-cache --update curl jq
  script:
    - . ./build-status.gitlab-ci.sh
    - status FAILED
  dependencies:
    - clone
  when: on_failure
