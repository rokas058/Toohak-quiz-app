plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'
    id 'pmd'
    id 'com.github.spotbugs' version '6.1.7'
    id "com.microsoft.azure.azurewebapp" version "1.10.0"
}

group = 'com.sourcery'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    enabled = false
}

checkstyle {
    toolVersion = "10.12.4"
    configFile = file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
}

spotbugs {
    excludeFilter.set(file("${rootProject.projectDir}/config/spotbug/spotbugs-exclude.xml"))
}

repositories {
    mavenCentral()
}

ext {
    jjwtVersion = '0.12.6'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.8.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    implementation 'com.okta.spring:okta-spring-boot-starter:3.0.5'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.apache.tika:tika-core:3.1.0'
    implementation 'net.coobird:thumbnailator:0.4.20'
    implementation 'com.azure:azure-storage-blob:12.30.0'
    implementation "me.paulschwarz:spring-dotenv:4.0.0"
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'com.github.spotbugs:spotbugs-annotations:4.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation "io.jsonwebtoken:jjwt-api:$jjwtVersion"
    implementation 'org.modelmapper:modelmapper:3.2.2'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    runtimeOnly 'org.postgresql:postgresql:42.7.5'
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Testcontainers for integration tests
    testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
    testImplementation 'org.testcontainers:postgresql:1.19.7'

    // exclude google-collections to only use Guava
    checkstyle("com.puppycrawl.tools:checkstyle:10.12.4") {
        exclude group: "com.google.collections", module: "google-collections"
    }
    checkstyle("com.google.guava:guava:32.0.1-jre")
}

tasks.named('test') {
    useJUnitPlatform()
    def mockitoCore = configurations.testRuntimeClasspath.resolvedConfiguration
            .resolvedArtifacts
            .find { it.moduleVersion.id.name == 'mockito-core' }
            .file

    jvmArgs = [
            "-javaagent:${mockitoCore}",
            "-Xshare:off"
    ]
}
